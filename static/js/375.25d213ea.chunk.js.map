{"version":3,"file":"static/js/375.25d213ea.chunk.js","mappings":"oSAGaA,EAAQC,EAAAA,GAAAA,IAAH,yCAILC,EAAgBD,EAAAA,GAAAA,IAAH,0CAIbE,EAAWF,EAAAA,GAAAA,IAAH,8CAIRG,EAAaH,EAAAA,GAAAA,GAAH,8EAMVI,EAAaJ,EAAAA,GAAAA,GAAH,8CAIVK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,8L,SCdjBO,EAAQC,EAAAA,MAAAA,QA0Ed,EAxEqB,WAAO,IAAD,IACzB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MAETC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCAGd,wGAEUC,GAAMC,EAAAA,EAAAA,IAAiBJ,GAFjC,SAG2BP,EAAMY,IAAIF,GAHrC,OAGUG,EAHV,OAKYC,EAASD,EAATC,KAERV,EAAeU,GAPnB,gDASIC,QAAQC,IAAR,MATJ,0DAHc,0DACdC,EAcD,GAAE,CAACV,IAEJ,IAAQW,EACNf,EADMe,MAAOC,EACbhB,EADagB,aAAcC,EAC3BjB,EAD2BiB,SAAUC,EACrClB,EADqCkB,OAAQC,EAC7CnB,EAD6CmB,YAAaC,EAC1DpB,EAD0DoB,aAGtDC,EAAO,IAAIC,KAAKF,GAAcG,cAC9BC,EAAY,oBAAGtB,EAASuB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,iCACE,SAAC/B,EAAD,CAAYgC,GAAIH,EAAhB,sBACA,UAACjC,EAAD,YACE,SAACF,EAAD,CACEuC,IAAKT,GAAW,yCAAsCA,GACtDU,IAAKd,KAEP,UAACvB,EAAD,YACE,0BACGuB,EADH,KACYM,EADZ,QAGA,wCAAgBL,GAA0C,GAA1BA,EAAac,QAAQ,GAArD,QACA,sCACA,uBAAIb,KACJ,mCACCC,IACC,SAACzB,EAAD,UACGyB,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,SAACtC,EAAD,UAAwBsC,GAAPA,EADP,aAOpB,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAASL,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,EAAAM,SAAD,CAAUC,UAAU,uGAApB,UACE,SAAC,KAAD,WAKT,C,wJCnFD,IAAMC,EAAU,mCAEHC,EAAoB,WAG/B,MAFS,kEAA8DD,EAGxE,EAEY3B,EAAmB,SAAAJ,GAG9B,MAFS,6CAAyCA,EAAzC,oBAA4D+B,EAA5D,kBAGV,EAEYE,EAAkB,SAAAjC,GAG7B,MAFS,6CAAyCA,EAAzC,4BAAoE+B,EAApE,kBAGV,EAEYG,EAAmB,SAAAlC,GAG9B,MAFS,6CAAyCA,EAAzC,4BAAoE+B,EAApE,yBAGV,EAEYI,EAAa,SAAAC,GAGxB,MAFS,4DAAwDL,EAAxD,iCAAwFK,EAAxF,8BAGV,C","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.jsx","components/Services/fetchFilms.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Image = styled.img`\n  width: 300px;\n`;\n\nexport const FilmContainer = styled.div`\n  display: flex;\n`;\n\nexport const FilmInfo = styled.div`\n  margin-left: 15px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding: 0;\n`;\n\nexport const GenresItem = styled.li`\n  margin-right: 5px;\n`;\n\nexport const BackButton = styled(NavLink)`\n  margin-bottom: 7px;\n  display: inline-block;\n\n  text-decoration: none;\n  color: white;\n  background-color: gray;\n  padding: 3px 10px;\n  border-radius: 4px;\n`;\n","import { NavLink, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchFilmDetails } from 'components/Services/fetchFilms';\nimport {\n  Image,\n  FilmContainer,\n  FilmInfo,\n  GenresList,\n  GenresItem,\n  BackButton,\n} from './MovieDetails.styled';\nconst axios = require('axios').default;\n\nconst MovieDetails = () => {\n  const [filmDetails, setfilmDetails] = useState([]);\n  const location = useLocation();\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchFilms();\n\n    async function fetchFilms() {\n      try {\n        const url = fetchFilmDetails(movieId);\n        const response = await axios.get(url);\n\n        const { data } = response;\n\n        setfilmDetails(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [movieId]);\n\n  const { title, vote_average, overview, genres, poster_path, release_date } =\n    filmDetails;\n\n  const year = new Date(release_date).getFullYear();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <>\n      <BackButton to={backLinkHref}>Go back</BackButton>\n      <FilmContainer>\n        <Image\n          src={poster_path && `https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <FilmInfo>\n          <h2>\n            {title} ({year})\n          </h2>\n          <p>User Score: {vote_average && vote_average.toFixed(1) * 10}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          {genres && (\n            <GenresList>\n              {genres.map(({ name }) => (\n                <GenresItem key={name}>{name}</GenresItem>\n              ))}\n            </GenresList>\n          )}\n        </FilmInfo>\n      </FilmContainer>\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Идет загрузка</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","const API_KEY = 'dfb50cc3b16f950a5a6b0ea437e17f05';\n\nexport const fetchPopularFilms = () => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n\n  return url;\n};\n\nexport const fetchFilmDetails = movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n  return url;\n};\n\nexport const fetchFilmActors = movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n\n  return url;\n};\n\nexport const fetchFilmReviews = movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n\n  return url;\n};\n\nexport const searchFilm = query => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n\n  return url;\n};\n"],"names":["Image","styled","FilmContainer","FilmInfo","GenresList","GenresItem","BackButton","NavLink","axios","require","useState","filmDetails","setfilmDetails","location","useLocation","movieId","useParams","useEffect","url","fetchFilmDetails","get","response","data","console","log","fetchFilms","title","vote_average","overview","genres","poster_path","release_date","year","Date","getFullYear","backLinkHref","state","from","to","src","alt","toFixed","map","name","Suspense","fallback","API_KEY","fetchPopularFilms","fetchFilmActors","fetchFilmReviews","searchFilm","query"],"sourceRoot":""}